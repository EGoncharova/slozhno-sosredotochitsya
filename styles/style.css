/* Основные стили проекта. Это стили для темы, которую вы верстаете первой. */
.page {
  /* сохраните в разметке и стилях класс page. На его основе работает скрипт. */
  background: var(--background-color);
  font-family:  'IBM Plex mono', serif;
  background-image: var(--background-image);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  /* fixed не дает прокручивать фоновую картинку */
  background-attachment: fixed;
}
.header {
  min-height: 100vh;
  padding: var(--offset-small);
  display: grid;
  grid-template-rows: 1fr auto 1fr;
  grid-template-columns: 1fr;
  align-items: center;
}
.decorated-zone {
  position: relative;
}
.decorated-zone::before, .decorated-zone::after {
  content: '';
  display: block;
  width: 25px;
  height: 25px;
  border-color: var(--accent-color);
  border-style: solid;
  position: absolute;
}
.decorated-zone::before {
  border-right-width: 1px;
  border-top-width: 1px;
  border-left-width: 0;
  border-bottom-width: 0;
  top:var(--offset-small);
  right:var(--offset-small);
}
.decorated-zone::after {
  border-left-width: 1px;
  border-bottom-width: 1px;
  border-top-width: 0;
  border-right-width:0;
  left:var(--offset-small);
  bottom:var(--offset-small);
}
.header__rec {
  color: var(--accent-color);
  display: flex;
  align-items: center;
  gap: 18px;
  
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 25px; /* 138.889% */
  /* позишн абс - 1. вынимает элемент из потока документа (остальные элементы сдвигаются вверх
  2. элемент вылезает "вперед", появляется ось Z, глубина - по этой оси элемент стал ближе всех к нам
  3. мы его можем позиционировать и по стандартным двум осям X, Y, задавая координаты через  left-right & top-bottom*/
  position: absolute;
  top: 12px;
  right: 19px;
}
.header__rec::after {
  /* ::афтер - это псевдо-элемент */
  content: '';
  background-color: var(--accent-color); /* за закраску элемента отвечает цвет ФОНА, просто колор отвечат только за цвет текста, букв */
  filter: drop-shadow(0px 0px 4px  var(--accent-color));
  display: inline-block; /* нужно, чтобы иметь возможность задать высоту */
  width: 9px;
  height: 9px;
  border-radius: 50%; /* значение 50% превращает квадрат в круг */
}
.header__theme-menu-list {
  display: flex;
  flex-direction: column;
  gap: 18px;
  line-height: 18px; /* 100% */
  text-align: right;
}
.header__theme-menu-button {
  background-color: transparent;
  border: none;
  color: var(--accent-color);
  padding: 0 13px;
  cursor: pointer;
  font-size: var(--text-size);
}
.header__theme-menu-button:focus {
  outline: none;
}

.header__theme-menu-button_active {
  outline: 1px solid var(--accent-color);
}
.header__theme-menu-button:focus-visible {
      text-decoration: underline;
    }
.header__theme-menu-button:hover {
  outline: 1px solid rgba(255, 0, 112, 0.40);
}






.header__theme-title {
  color:var(--big-text-color);
  text-shadow: 4px 4px 0px var(--accent-color);
  /* font-size: 116px; */
  font-size: clamp(7.25rem, 7.0115rem + 1.0178vw, 7.5rem);
  font-style: normal;
  font-weight: 700;
  line-height: 82.5%;
}
.header__theme-text {
  font-size: var(--text-size);
  font-style: normal;
  font-weight: 700;
  line-height: 23.4px; /* 130% */
}
.title-decor {
  color: var(--text-color);
  background-color: var(--accent-color);
}
  /*===========================================================*/
  .difficulties {
    margin-top: 40px;
    padding: 0 var(--offset-small);
  }
 .concentration, .advices, .gallery {
  padding: 0 var(--offset-small);
  margin-top: 30px;
}
.grid_type_text {
  display: grid;
  grid-template-columns: 1fr;
}
.grid_type_text_middle {
  display: grid;
  grid-template-columns: 1fr;
}
.content__text__h2 {
color: var(--accent-color);
font-family: "IBM Plex Mono", serif;
font-size: 18px;
font-style: normal;
font-weight: 700;
line-height: 23.4px;
margin-bottom: var(--offset-big);

}

.content__text__h3 {
  font-size: var(--text-size);
  font-style: normal;
  font-weight: 700;
  margin-bottom: var(--offset-small);
  line-height: 23.4px; 
}
.content__text__h4 {
  color: var(--text-color);
  background-color: var(--accent-color);
  font-family: "IBM Plex Mono",serif;
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 23.4px; 
  /* в блочной модели из соприкасающихся вертикальных марджинов отыграет бОльший,
  т.о., добавляя н4, мы сдалаем отступ между н3 и н4 = 20пкс, а не 30. А когда уберем р4, отступ останется только от н3 = 10пкс */
  margin: var(--offset-big) 0 var(--offset-small);
}
.content__text__p {
  color: var(--content-text-color);
  font-family: "IBM Plex Mono",serif;
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 23.4px;
  margin-bottom: var(--offset-big);
}
.text__link {
  color: var(--content-text-color);
  filter: drop-shadow(2px 2px 0px  var(--accent-color));
  text-decoration: none;
}
.text__link:focus {
  outline: none;
}

.text__link:hover {
  text-decoration: underline;
}

/*========================================gallery=========================*/

.grid_type_gallery {
  display: grid;
  grid-template-columns: 1fr;
  gap: 5px;
}

.gallery__image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.footer__text-title {
  color:var(--big-text-color);
  font-size: clamp(7.25rem, 7.0115rem + 1.0178vw, 7.5rem);
  text-shadow: 2px 2px 0px var(--accent-color);
  font-style: normal;
  font-weight: 700;
  line-height: 82.5%;
}
.footer {
  display: flex;
  /*  100vh - 'то динамическая высота, соответству.щая высоте екрана ,раузера*/
  min-height: 100vh;
  margin-top: 41px;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
/*=================ADAPTIVE==========================*/
/* медиа-запрос позволяет переопредеить характеристики элементов в зависимости от размера экрана.
Когда ведем работу мобайл-фЁст, тогда размер экрана описывается свойством min-width.
Когда идем от десктоп-фёст, тогда размер экрана определяется свойством mах-width */
@media screen and (min-width: 768px) {
  .header {
    padding:  var(--offset-big);
  }
  .decorated-zone::before {
    top:var(--offset-big);
    right:var(--offset-big);
  }
  .decorated-zone::after {
    left:var(--offset-big);
    bottom:var(--offset-big);
  }
  .header__rec {
    top: 22px;
    right: 29px;
  }
  .header__theme-title, .footer__text-title {
    /* функция  clamp позволяет задать величину вычисляемой, а не константой - за это отвечает средний параметр
    крайние параметры задают границы диапазона изменений вычисляемой величины */
    font-size: clamp(7.5rem, 0.5625rem + 14.4531vw, 9.8125rem);
  }
  .header__theme-title {
    /* марджин может быть отрицательным.
     если используем переменную и надо получить отриц число, 
     то тогда надо умножить переменную на (-1) - это делается при помощи функции калк
    */
    margin-left: calc(-1 * var(--offset-big));
  }
  .header__theme-text {
    width: 50%;
    margin: 0 0 0 50%;
  }
  .concentration .content__text__h2 {
    width: 30%;
  }
  .grid_type_text {
    grid-template-columns: 0.33fr 0.67fr;
    gap: var(--offset-big);
  }
  .difficulties, .concentration, .advices, .gallery {
    padding: 0 var(--offset-big);
    margin-top: 60px;
  }
  .grid_type_gallery {
    grid-template-columns: repeat(3,1fr);
    gap: var(--offset-big);
    margin-top: var(--offset-big);
  }
  /* :nth-child(1) - псевдокласс, позволяющий обращаться к детям по номеру*/
  .gallery__item:nth-child(1) {
    grid-column: 1 / 3;
    grid-row: 1 / 2;
  }
  .gallery__item:nth-child(2) {
    grid-column: 3 / 4;
    grid-row: 1 / 3;
  }
  .gallery__item:nth-child(3) {
    grid-column: 1 / 2;
    grid-row: 2 / 4;
  }
  .gallery__item:nth-child(4) {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
  }
  .gallery__item:nth-child(5) {
    grid-column: 2 / 4;
    grid-row: 3 / 4;
  }
  .footer {
    margin-top: 55px;
  }
}
@media screen and (min-width: 1024px) {
  .header, .footer {
    padding: var(--offset-big);
  }
  .header__theme-menu {
    align-self: start;
  }
  .header__theme-menu-list {
    flex-direction: row;
    justify-content: center;
  }
  .header__theme-text {
    margin: 0 0 0 50%;
  }
  
  .grid_type_text_middle {
    grid-template-columns: repeat(3, 1fr);
    gap: var(--offset-big);
  }
}